name: deploy-docker

on:
  workflow_call:
    inputs:
      sha:
        required: true
        type: string
      name:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      RESPONSA_REGISTRY_USERNAME:
        required: true
      RESPONSA_REGISTRY_PASSWORD:
        required: true
      UPDATE_WEBHOOK:
        required: true
      HEALTHCHECK_URI:
        required: true
env:
  UPDATE_WEBHOOK: ${{secrets.UPDATE_WEBHOOK}}
  HEALTHCHECK_URI: ${{secrets.HEALTHCHECK_URI}}
jobs:
  docker:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Responsa Registry
        uses: docker/login-action@v1
        with:
          registry: registry.goresponsa.com
          username: ${{ secrets.RESPONSA_REGISTRY_USERNAME }}
          password: ${{ secrets.RESPONSA_REGISTRY_PASSWORD }}
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 1
          format: 'YYYY-MM-DDTHH:mm:ss.000Z'
      - name: Docker build
        run: docker build --network=secrets --build-arg CI_PUTS_HERE_LAST_GIT_COMMIT="${{ inputs.sha }}" --build-arg CI_PUTS_HERE_DEPLOY_DATE="${{ steps.time.outputs.time }}" -t registry.goresponsa.com/${{ inputs.name }}:${{ inputs.version }} .
      - name: Docker tag
        run: docker image tag registry.goresponsa.com/${{ inputs.name }}:${{ inputs.version }} registry.goresponsa.com/${{ inputs.name }}:latest
      - name: Docker push
        id: docker-push
        run: docker image push registry.goresponsa.com/${{ inputs.name }}:${{ inputs.version }} && docker image push registry.goresponsa.com/${{ inputs.name }}:latest
      - name: Deploy Webhook
        if: ${{ always() && env.UPDATE_WEBHOOK && steps.docker-push.conclusion == 'success' }}
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ env.UPDATE_WEBHOOK }}
      - name: Healthcheck
        id: healthcheck
        if: ${{ success() && env.HEALTHCHECK_URI }}
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://node-red.internals.goresponsa.com/checkUrl"
          method: 'POST'
          data: '{ "url": "${{ env.HEALTHCHECK_URI }}", "text": "${{ inputs.sha }}", "retry": 3 }'
