name: code-analisys

on:
  workflow_call:
    inputs:
      workspace:
        required: true
        type: string
      repositoryName:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true
      

jobs:
  sonarqube:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: jest-results
          path: ${{ inputs.workspace }}
      - run: ls -la ${{ inputs.workspace }}
      - run: echo "NEW_PATH=$(pwd)" >> $GITHUB_ENV
      - run: echo $NEW_PATH
      - run: cat test-report-sonar.xml | awk -v NEW_PATH="$NEW_PATH" -v PH="--PLACE_HOLDER--" '{sub(PH, NEW_PATH, $0); print $0}' > tmp && mv tmp test-report-sonar.xml
      - run: cat test-report-sonar.xml
      - name: sonarqube 
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: /github/workspace
          args: >
            -Dsonar.projectKey=${{ inputs.repositoryName }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/coverage/*,**/coverage/**/*,**/test/datasets/*,**/test/datasets/**/*
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/coverage/*,**/coverage/**/*,**/*test*,**/*test*/*,**/*test*/**/*
            -Dsonar.cpd.exclusions=**/test/*,**/test/**/*
            -Dsonar.test.inclusions=**/*test*,**/test/**/*,**/*test*,**/*test*/*,**/*test*/**/*
            -Dsonar.testExecutionReportPaths=test-report-sonar.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
